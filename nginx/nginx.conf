user  nginx;
worker_processes  1;

events {
  worker_connections  1024;
}

http {
  # Pass a unique request ID header downstream
  map $request_id $rid { default $request_id; }
  server_tokens off;

  # Define upstreams for each service
  upstream search           { server search-service:5000; }
  upstream cart             { server cart-service:5000; }
  upstream order            { server order-service:5000; }
  upstream payment          { server payment-service:5000; }
  upstream user             { server user-service:5000; }
  upstream auth             { server auth-service:5000; }
  upstream product          { server product-service:5000; }
  upstream wishlist         { server wishlist-service:5000; }
  upstream recommendation   { server recommendation-service:5000; }
  upstream notification     { server notification-service:5000; }

  server {
    listen 80;
    server_name _;

    # Global timeouts
    proxy_connect_timeout 5s;
    proxy_send_timeout    5s;
    proxy_read_timeout    5s;

    # Simple health-check for the gateway itself
    location = /health {
      return 200 'OK';
      add_header Content-Type text/plain;
    }

    # Route all /api/<svc>/â€¦ requests to the correct upstream
    location ~ ^/api/(?<svc>\w+)(?<rest>/.*|$) {
      # pick the upstream by service name
      set $upstream "";
      if ($svc = "search")        { set $upstream "search"; }
      if ($svc = "cart")          { set $upstream "cart"; }
      if ($svc = "order")         { set $upstream "order"; }
      if ($svc = "payment")       { set $upstream "payment"; }
      if ($svc = "user")          { set $upstream "user"; }
      if ($svc = "auth")          { set $upstream "auth"; }
      if ($svc = "product")       { set $upstream "product"; }
      if ($svc = "wishlist")      { set $upstream "wishlist"; }
      if ($svc = "recommendation"){ set $upstream "recommendation"; }
      if ($svc = "notification")  { set $upstream "notification"; }

      # forward headers
      proxy_set_header X-Request-ID $rid;
      proxy_set_header Host          $host;

      # rebuild and proxy the full path, e.g. /api/search/health
      proxy_pass http://$upstream/api/$svc$rest$is_args$args;
    }
  }
}
